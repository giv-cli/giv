# GIV Configuration Example
## Check the docs/configuration.md for more details.

## Debugging
# ### Set to "true" to enable debug mode, which provides detailed logging
# GIV_DEBUG=""
# ### If set to "true", enables dry run mode (no changes will be made)
# GIV_DRY_RUN=""
# ### Set to "true" to preserve temporary directories after execution for debugging purposes
# GIV_TMPDIR_SAVE=""


## Model and API configuration
GIV_MODEL="devstral"

## Remote: groq API Configuration
GIV_API_URL="https://api.groq.com/openai/v1/chat/completions"
GIV_API_MODEL="compound-beta"
GIV_API_KEY="${GROQ_API_KEY:-}"


## Remote: OpenAI Compatible API Configuration
GIV_API_MODEL=gpt-4o-mini
GIV_API_URL=https://api.openai.com/v1/chat/completions
GIV_API_KEY="${OPENAI_API_KEY:-}"

## Project details
### Path to the file containing the project version (e.g., "pyproject.toml" or "package.json")
GIV_VERSION_FILE="src/config.sh"

### Regex pattern to extract the version string from the version file (e.g., 'version\s*=\s*"([0-9\.]+)"')
GIV_VERSION_PATTERN=""

### Regex pattern to identify TODO comments in code (e.g., 'TODO:(.*)')
GIV_TODO_PATTERN=""

### Comma-separated list of files or glob patterns to search for TODOs (e.g., "*.py,src/**/*.js")
GIV_TODO_FILES="docs/todos.md"

GIV_PROJECT_TYPE=custom


AZURE_OPENAI_API_INSTANCE_NAME=i2db-chat-sandboxaizehuif2whye3c
AZURE_OPENAI_API_VERSION=2024-04-01-preview
EMBED_DEPLOYMENT=embedding
LLM_DEPLOYMENT=gpt-4o-mini
LLM_DEPLOYMENT=gpt-4.1-nano


## If your deployment name and model name are different, set the model name here or use the --model flag in the CLI
GIV_API_MODEL=$LLM_DEPLOYMENT

## Create the proper API URL for Azure OpenAI
GIV_API_URL="https://$AZURE_OPENAI_API_INSTANCE_NAME.openai.azure.com/openai/deployments/$LLM_DEPLOYMENT/chat/completions?api-version=$AZURE_OPENAI_API_VERSION"

## Use the Azure OpenAI API key for authentication
GIV_API_KEY=$AZURE_OPENAI_API_KEY
